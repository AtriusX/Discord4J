plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
}
dependencies {
    compile project(':rest')
    compile project(':gateway')
    compile project(':voice')

    compile "$storesArtifact:$jdkstores_version"

    testCompile "junit:junit:$junit_version"
    testCompile "org.mockito:mockito-core:$mockito_version"
    testCompile "ch.qos.logback:logback-classic:$logback_version"
    testCompile "io.projectreactor:reactor-test"
    testCompile "org.reflections:reflections:0.9.11"
    testCompile "com.sedmelluq:lavaplayer:1.3.16"
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.2.0-alpha"
}

javadoc {
    dependsOn project(':rest').javadoc
    dependsOn project(':gateway').javadoc
    dependsOn project(':voice').javadoc

    options.linksOffline rootProject.buildDocsUrl('discord4j-common'), project(':common').javadoc.destinationDir.toURI() as String
    options.linksOffline rootProject.buildDocsUrl('discord4j-rest'), project(':rest').javadoc.destinationDir.toURI() as String
    options.linksOffline rootProject.buildDocsUrl('discord4j-gateway'), project(':gateway').javadoc.destinationDir.toURI() as String
    options.linksOffline rootProject.buildDocsUrl('discord4j-voice'), project(':voice').javadoc.destinationDir.toURI() as String

    options.linksOffline rootProject.buildStoresDocsUrl('stores-api', false), rootProject.buildStoresDocsUrl('stores-api', true)
    options.linksOffline rootProject.buildStoresDocsUrl('stores-jdk', false), rootProject.buildStoresDocsUrl('stores-jdk', true)
}
repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
